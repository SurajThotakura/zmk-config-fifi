/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE    0
#define SYS     1
#define FUN     2
#define MOUSE   3
#define MEDIA   4
#define NUM     5
#define NAV     6

/ {
	behaviors {
		hm: homerow_mods {
			compatible = "zmk,behavior-hold-tap";
			label = "homerow mods";
			#binding-cells = <2>;
			tapping_term_ms = <150>;
			flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
		};
	};

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
   &kp SQT    &kp COMMA   &kp DOT        &kp P         &kp Y          &kp F         &kp G         &kp C        &kp R         &kp L
   &hm LGUI A &hm LALT O  &hm LCTRL E    &hm LSHFT U   &kp I          &kp D         &hm LSHFT H   &hm LCTRL T  &hm LALT N    &hm LGUI S
   &kp SEMI   &hm RALT Q  &kp J          &kp K         &kp X          &kp B         &kp M         &kp W        &hm RALT V    &kp Z
                          &lt SYM FSLH &lt FUN RET &lt MOUSE ESC    &lt MEDIA TAB &lt NUM SPACE &lt NAV BSPC
            >;
        };
	
	sym_layer {
            bindings = <
   &kp LBRC  &kp AMPS &kp ASTRK &kp LPAR  &kp RBRC    &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bootloader
   &kp COLON &kp DLLR &kp PRCNT &kp CARET &kp PLUS    &trans     &kp LSHFT    &kp LCTRL    &kp LALT     &kp LGUI
   &kp TILDE &kp EXCL &kp AT    &kp HASH  &kp PIPE    &trans     &trans       &trans       &trans       &reset
                      &kp LPAR  &kp RPAR  &kp UNDER   &trans     &trans       &trans
            >;
        };

	fun_layer {
	    bindings = <
   &kp F12 &kp F7 &kp F8    &kp F9    &kp PSCRN         &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bootloader
   &kp F11 &kp F4 &kp F5    &kp F6    &kp SLCK          &trans     &kp LSHFT    &kp LCTRL    &kp LALT     &kp LGUI
   &kp F10 &kp F1 &kp F2    &kp F3    &kp PAUSE_BREAK   &trans     &trans       &trans       &trans       &reset
		  &kp K_APP &kp SPACE &kp TAB           &trans     &trans       &trans
	    >;
	};

        mouse_layer {
            bindings = <
   &bootloader &bt BT_SEL 2 &bt BT_SEL 1 &bt BT_SEL 0 &bt BT_CLR   &trans &trans &trans &trans &trans
   &kp LGUI    &kp LALT     &kp LCTRL    &kp LSHFT    &trans       &trans &trans &trans &trans &trans
   &reset      &trans       &trans       &trans       &trans       &trans &trans &trans &trans &reset
                            &trans       &trans       &trans       &trans &trans &trans
            >;
        };
	
        media_layer {
            bindings = <
   &bootloader &bt BT_SEL 2 &bt BT_SEL 1 &bt BT_SEL 0 &bt BT_CLR   &trans &kp C_STOP &kp C_VOLUME_UP   &kp C_PREV &trans
   &kp LGUI    &kp LALT     &kp LCTRL    &kp LSHFT    &trans       &trans &kp C_PP   &kp C_VOLUME_DOWN &kp C_NEXT &trans
   &reset      &out OUT_USB &out OUT_BLE &out OUT_TOG &trans       &trans &trans     &kp C_MUTE        &trans     &trans
                            &trans       &trans       &trans       &trans &trans     &trans
            >;
        };
	
	num_layer {
            bindings = <
   &kp EXCL    &kp AT      &kp POUND    &kp DLLR     &kp PRCNT     &kp CARET  &kp AMPS     &kp ASTRK    &kp LPAR     &kp RPAR
   &hm LGUI N1 &hm LALT N2 &hm LCTRL N3 &hm LSHFT N4 &kp N5        &kp N6     &hm LSHFT N7 &hm LCTRL N8 &hm LALT N9  &hm LGUI N0
   &kp GRAVE   &kp SEMI    &kp EQUAL    &kp PLUS     &kp BSLH      &kp PIPE   &kp MINUS    &kp UNDER    &kp FSLH     &kp TILDE
                      &kp LBKT  &kp RBKT &kp MINUS                 &trans     &trans       &trans
            >;
        };

        nav_layer {
            bindings = <
   &bootloader &kp END      &kp UP       &kp HOME     &kp CAPS     &kp PSCRN  &kp HOME    &kp UP     &kp END   &kp DEL
   &kp PG_DN   &kp LEFT     &kp DOWN     &kp RIGHT    &PG_UP       &kp PG_UP  &kp LEFT    &kp DOWN   &kp RIGHT &kp PG_DN
   &reset      &bt BT_SEL 2 &bt BT_SEL 1 &bt BT_SEL 0 &bt BT_CLR   &kp K_UNDO &kp K_PASTE &kp K_COPY &kp K_CUT &kp K_REDO
                            &trans       &trans       &trans       &trans     &trans      &trans
            >;
        };
    };
};
