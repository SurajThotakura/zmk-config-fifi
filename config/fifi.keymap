/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE    0
#define FUN     1
#define SYM     2
#define NUM     3
#define NAV     4
#define QWERTY  5


/ {
	behaviors {
		hm: homerow_mods {
			compatible = "zmk,behavior-hold-tap";
			label = "homerow mods";
			#binding-cells = <2>;
			tapping_term_ms = <300>;
			flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
		};
	};

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
   &kp SQT      &kp COMMA       &kp DOT         &kp P         &kp Y             &kp F       &kp G       &kp C       &kp R         &kp L
   &kp A        &hm LALT O      &hm LCTRL E     &hm LSHFT U   &hm LGUI I        &hm LGUI D  &hm LSHFT H &hm LCTRL T &hm LALT N    &kp S
   &kp SEMI     &hm RALT Q      &kp J           &kp K         &kp X             &kp B       &kp M       &kp W       &hm RALT V    &kp Z
                          &lt FUN TAB &lt SYM SPACE &kp BSPC   &kp LSHIFT &lt NUM RET &lt NAV ESC
            >;
        };

        fun_layer {
            bindings = <
   &kp C_MUTE &kp C_PP &tog QWERTY &kp F11      &kp F12          &kp C_VOLUME_DOWN     &kp C_VOLUME_UP    &kp C_PREV     &kp C_NEXT    &kp C_STOP       
   &kp F1     &kp F2        &kp F3       &kp F4 &kp F5           &kp F6     &kp F7       &kp F8       &kp F9       &kp F10
   &bt BT_CLR &bt BT_SEL 0  &bt BT_SEL 1 &bt BT_SEL 2 &trans     &trans       &trans       &trans       &bootloader  &reset
                            &trans     &trans       &trans       &trans     &trans       &trans
            >;
        };

        sym_layer {
            bindings = <
   &kp LBRC  &kp AMPS &kp ASTRK &kp LPAR  &kp RBRC    &trans     &trans       &trans       &trans       &trans
   &kp COLON &kp DLLR &kp PRCNT &kp CARET &kp PLUS    &trans     &kp LSHFT    &kp LCTRL    &kp LALT     &kp LGUI
   &kp TILDE &kp EXCL &kp AT    &kp HASH  &kp PIPE    &trans     &trans       &trans       &trans       &trans
                      &kp LPAR  &kp RPAR  &kp UNDER   &trans     &trans       &trans
            >;
        };

        num_layer {
            bindings = <
   &kp EXCL  &kp AT &kp POUND  &kp DLLR &kp PRCNT    &kp CARET &kp AMPS &kp ASTRK &kp LPAR &kp RPAR
   &kp N1  &hm LALT N2 &hm LCTRL N3  &hm LSHFT N4 &hm LGUI N5   &hm LGUI N6     &hm LSHFT N7    &hm LCTRL N8   &hm LALT N9    &kp N0
   &kp GRAVE &kp SEMI &kp EQUAL  &kp PLUS &kp BSLH    &kp PIPE     &kp MINUS       &kp UNDER       &kp FSLH       &kp TILDE
                    &kp LBKT &kp RBKT &kp MINUS   &trans     &trans       &trans
            >;
        };

        nav_layer {
            bindings = <
   &trans       &kp END &kp UP &kp HOME  &kp CAPS     &kp PSCRN    &kp HOME     &kp UP      &kp END    &kp DEL      &trans
   &kp PG_DN    &kp LEFT    &kp DOWN     &kp RIGHT    &kp PG_UP    &kp PG_UP    &kp LEFT    &kp DOWN   &kp RIGHT    &kp PG_DN
   &trans      &trans       &trans       &trans       &trans       &trans       &kp C_AC_UNDO    &kp C_AC_PASTE    &kp C_AC_COPY  &kp C_AC_CUT &kp C_AC_REDO
                            &trans       &trans       &trans       &trans    &trans    &trans
            >;
        };

        qwerty_layer {
            bindings = <
   &kp Q   &kp W  &kp E     &kp R     &kp T             &kp Y      &kp U        &kp I        &kp O        &kp P
   &kp A   &kp S  &kp D     &kp F     &kp G             &kp H      &kp J        &kp K        &kp L        &kp SEMI
   &kp Z   &kp X  &kp C     &kp V     &kp B             &kp N      &kp M        &kp ,        &kp .        &kp FSLH
                          &lt SYM TAB &lt FUN SPACE &kp BSPC   &lt MEDIA LSHIFT &lt NUM RET &lt NAV ESC
            >;
        };
    };
};
